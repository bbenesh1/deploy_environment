---

- name: SAP Install Media Detect - SAP ASE - Get info of directory 'sapase_extracted'
  ansible.builtin.stat:
    path: "{{ __sap_install_media_detect_software_main_directory }}/sapase_extracted/"
  register: __sap_install_media_detect_sapase_extracted_stat

- name: SAP Install Media Detect - SAP ASE - Ensure directory 'sapase_extracted' is absent
  ansible.builtin.file:
    path: "{{ __sap_install_media_detect_software_main_directory }}/sapase_extracted/"
    state: absent
  when:
    - not sap_install_media_detect_skip_extraction_if_target_dir_exists

- name: SAP Install Media Detect - SAP ASE - Create Directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
    owner: root
    group: root
  with_items:
    - "{{ __sap_install_media_detect_software_main_directory }}/sapase/"
    - "{{ __sap_install_media_detect_software_main_directory }}/sapase_extracted/"
    - "{{ __sap_install_media_detect_software_main_directory }}/sapase_client_extracted/"

- name: SAP Install Media Detect - SAP ASE - List files in directory
  ansible.builtin.command: find . -maxdepth 1 -type f
  register: detect_directory_files
  args:
    chdir: "{{ __sap_install_media_detect_software_main_directory }}"
  changed_when: false

- name: SAP Install Media Detect - SAP ASE - Detect ZIP files (including no file extensions), ignore errors
  ansible.builtin.shell: if [ ! -z "$(file {{ item }} | grep 'Zip archive data')" ]; then echo {{ item }}; fi
  register: detect_directory_files_zip
  with_items:
    - "{{ detect_directory_files.stdout_lines }}"
  args:
    chdir: "{{ __sap_install_media_detect_software_main_directory }}"
  ignore_errors: true
  changed_when: false

# Reason for noqa: grep -q with pipefail shell option returns 141 instead of 0
- name: SAP Install Media Detect - SAP ASE - Identify SAP ASE installation media # noqa risky-shell-pipe
  ansible.builtin.shell: |
    if [ ! -z "$(file {{ item }} | grep 'Zip archive data')" ]; then if zipinfo -1 {{ item }} | grep -q 'BD_SYBASE_ASE' ; then echo '{{ item }}' ; fi ; fi
  register: detect_directory_files_sapase
  changed_when: "item | length > 0"
  with_items:
    - "{{ detect_directory_files_zip.results | map(attribute='stdout') | select() }}"
  args:
    chdir: "{{ __sap_install_media_detect_software_main_directory }}"

- name: SAP Install Media Detect - SAP ASE - Identify SAP ASE Client installation media
  ansible.builtin.find:
    paths: "{{ __sap_install_media_detect_software_main_directory }}"
    recurse: true
    file_type: file
    patterns: '.*ASEBC.*'
    use_regex: true
  register: detect_directory_files_sapase_client

# Reason for noqa: Difficult to determine the change status in the shell command sequence
- name: SAP Install Media Detect - SAP ASE - Extract ZIP files of SAP ASE installation media # noqa no-changed-when
  ansible.builtin.shell: set -o pipefail && if [ ! -z "$(file {{ item }} | grep 'Zip archive data')" ]; then unzip {{ item }} -d {{ __sap_install_media_detect_software_main_directory }}/sapase_extracted/{{ item }}_extracted; fi
  with_items:
    - "{{ detect_directory_files_sapase.results | map(attribute='stdout') | select() }}"
  args:
    chdir: "{{ __sap_install_media_detect_software_main_directory }}"
  when: (not __sap_install_media_detect_sapase_extracted_stat.stat.exists) or
        (    __sap_install_media_detect_sapase_extracted_stat.stat.exists and not
             sap_install_media_detect_skip_extraction_if_target_dir_exists)

- name: SAP Install Media Detect - SAP ASE - Extract SAP ASE 16.0 Client with SAPCAR
  ansible.builtin.shell: |
    {{ __sap_install_media_detect_software_main_directory }}/{{ sap_swpm_sapcar_file_name }} \
    -xvf {{ item }} \
    -manifest SIGNATURE.SMF \
    -R "{{ __sap_install_media_detect_software_main_directory }}/sapase_client_extracted"
  args:
    chdir: "{{ __sap_install_media_detect_software_main_directory }}"
  with_items:
    - "{{ detect_directory_files_sapase_client.files[0].path }}"
  changed_when: true

- name: SAP Install Media Detect - SAP ASE - Identify SAP ASE extracted
  ansible.builtin.find:
    paths: "{{ __sap_install_media_detect_software_main_directory }}/sapase_extracted"
    recurse: true
    file_type: directory
    patterns: ".*SYBASE_LINUX.*"
    use_regex: true
  register: detect_directory_sapase_extracted

- name: SAP Install Media Detect - SAP ASE - Identify SAP ASE Client extracted
  ansible.builtin.find:
    paths: "{{ __sap_install_media_detect_software_main_directory }}/sapase_client_extracted"
    recurse: true
    file_type: file
    patterns: ".*sybodbc.*"
    use_regex: true
  register: detect_directory_sapase_client_extracted

- name: SAP Install Media Detect - SAP ASE - Local Directory source - move SAP ASE compressed archive files
  ansible.builtin.command: mv "{{ __sap_install_media_detect_software_main_directory }}/{{ item }}" "{{ __sap_install_media_detect_software_main_directory }}/sapase/{{ item }}"
  with_items:
    - "{{ detect_directory_files_sapase.results | map(attribute='stdout') | select() }}"
  when:
    - sap_install_media_detect_source == "local_dir"
