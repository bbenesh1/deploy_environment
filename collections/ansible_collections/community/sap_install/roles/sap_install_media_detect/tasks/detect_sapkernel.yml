---

# 5. SAPEXEDB
- name: SAP Install Media Detect - SAP Kernel - Get SAPEXEDB from software path
  ansible.builtin.shell: ls SAPEXEDB_*.SAR
  args:
    chdir: "{{ sap_swpm_software_path }}"
  register: sap_swpm_kernel_dependent_file_name_get
  changed_when: false

- name: SAP Install Media Detect - SAP Kernel - Set fact for SAPEXEDB
  ansible.builtin.set_fact:
    sap_swpm_kernel_dependent_path: "{{ sap_swpm_software_path }}"
    sap_swpm_kernel_dependent_file_name: "{{ sap_swpm_kernel_dependent_file_name_get.stdout }}"

- name: SAP Install Media Detect - SAP Kernel - Check availability of SAPEXEDB - {{ sap_swpm_kernel_dependent_path }}/{{ sap_swpm_kernel_dependent_file_name }}
  ansible.builtin.stat:
    path: "{{ sap_swpm_kernel_dependent_path }}/{{ sap_swpm_kernel_dependent_file_name }}"
  register: sap_swpm_kernel_dependent_file_name_stat
  failed_when: not sap_swpm_kernel_dependent_file_name_stat.stat.exists

# 6. SAPEXE
- name: SAP Install Media Detect - SAP Kernel - Get SAPEXE from software path
  ansible.builtin.shell: ls SAPEXE_*.SAR
  args:
    chdir: "{{ sap_swpm_software_path }}"
  register: sap_swpm_kernel_independent_file_name_get
  changed_when: false

- name: SAP Install Media Detect - SAP Kernel - Set fact for SAPEXE
  ansible.builtin.set_fact:
    sap_swpm_kernel_independent_path: "{{ sap_swpm_software_path }}"
    sap_swpm_kernel_independent_file_name: "{{ sap_swpm_kernel_independent_file_name_get.stdout }}"

- name: SAP Install Media Detect - SAP Kernel - Check availability of SAPEXE - {{ sap_swpm_kernel_independent_path }}/{{ sap_swpm_kernel_independent_file_name }}
  ansible.builtin.stat:
    path: "{{ sap_swpm_kernel_independent_path }}/{{ sap_swpm_kernel_independent_file_name }}"
  register: sap_swpm_kernel_independent_file_name_stat
  failed_when: not sap_swpm_kernel_independent_file_name_stat.stat.exists
