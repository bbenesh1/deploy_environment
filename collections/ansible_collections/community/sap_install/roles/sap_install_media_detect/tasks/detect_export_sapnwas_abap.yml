---

- name: SAP Install Media Detect - SAP NetWeaver AS (ABAP) platform only EXPORT - Get info of directory 'sapnwas_abap_export_extracted'
  ansible.builtin.stat:
    path: "{{ __sap_install_media_detect_software_main_directory }}/sapnwas_abap_export_extracted/"
  register: __sap_install_media_detect_sapnwas_abap_export_extracted_stat

- name: SAP Install Media Detect - SAP NetWeaver AS (ABAP) platform only EXPORT - Ensure directory 'sapnwas_abap_export_extracted' is absent
  ansible.builtin.file:
    path: "{{ __sap_install_media_detect_software_main_directory }}/sapnwas_abap_export_extracted/"
    state: absent
  when:
    - not sap_install_media_detect_skip_extraction_if_target_dir_exists

- name: SAP Install Media Detect - SAP NetWeaver AS (ABAP) platform only EXPORT - Ensure directories exist
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
    owner: root
    group: root
  with_items:
    - "{{ __sap_install_media_detect_software_main_directory }}/sapnwas_abap_export/"
    - "{{ __sap_install_media_detect_software_main_directory }}/sapnwas_abap_export_extracted/"

- name: SAP Install Media Detect - SAP NetWeaver AS (ABAP) platform only EXPORT - List files in directory
  ansible.builtin.command: find . -maxdepth 1 -type f
  register: detect_directory_files
  args:
    chdir: "{{ __sap_install_media_detect_software_main_directory }}"
  changed_when: false

- name: SAP Install Media Detect - SAP NetWeaver AS (ABAP) platform only EXPORT - Detect ZIP files (including no file extensions), ignore errors
  ansible.builtin.shell: set -o pipefail && if [ ! -z "$(file {{ item }} | grep 'Zip archive data')" ]; then echo {{ item }}; fi
  register: detect_directory_files_zip
  with_items:
    - "{{ detect_directory_files.stdout_lines }}"
  args:
    chdir: "{{ __sap_install_media_detect_software_main_directory }}"
  ignore_errors: true
  changed_when: no

- name: SAP Install Media Detect - SAP NetWeaver AS (ABAP) platform only EXPORT - Detect RAR files (including no file extensions), ignore errors
  ansible.builtin.shell: set -o pipefail && if [ ! -z "$(file {{ item }} | grep 'RAR')" ]; then echo {{ item }}; fi
  register: detect_directory_files_rar
  with_items:
    - "{{ detect_directory_files.stdout_lines }}"
  args:
    chdir: "{{ __sap_install_media_detect_software_main_directory }}"
  ignore_errors: true
  changed_when: no

# Reason for noqa: grep -q with pipefail shell option returns 141 instead of 0
- name: SAP Install Media Detect - SAP NetWeaver AS (ABAP) platform only EXPORT - Identify EXPORT files # noqa risky-shell-pipe
  ansible.builtin.shell: |
    if [ ! -z "$(file {{ item }} | grep 'Zip archive data')" ]; then
       if zipinfo -1 {{ item }} | grep -q 'DATA_UNITS/EXP'; then
          echo '{{ item }}'
       fi
    elif [ ! -z "$(file {{ item }} | grep 'RAR')" ]; then
       if eval "{{ sap_install_media_detect_rar_list }}" {{ item }} | grep -q 'DATA_UNITS/EXP'; then
          echo '{{ item }}'
       fi
    fi
  register: detect_directory_files_nwas_abap_export
  changed_when: "item | length > 0"
  with_items:
    - "{{ detect_directory_files_zip.results | map(attribute='stdout') | select() }}"
    - "{{ detect_directory_files_rar.results | map(attribute='stdout') | select() }}"
  args:
    chdir: "{{ __sap_install_media_detect_software_main_directory }}"

# Reason for noqa: Difficult to determine the change status in the shell command sequence
- name: SAP Install Media Detect - SAP NetWeaver AS (ABAP) platform only EXPORT - If any ZIP, then extract the SAP NetWeaver (ABAP) Installation Export file (unzip) # noqa no-changed-when
  ansible.builtin.shell: set -o pipefail && if [ ! -z "$(file {{ item }} | grep 'Zip archive data')" ]; then unzip {{ item }} -d ./sapnwas_abap_export_extracted ; fi
  with_items:
    - "{{ detect_directory_files_nwas_abap_export.results | map(attribute='stdout') | select() }}"
  args:
    chdir: "{{ __sap_install_media_detect_software_main_directory }}"
  when: (not __sap_install_media_detect_sapnwas_abap_export_extracted_stat.stat.exists) or
        (    __sap_install_media_detect_sapnwas_abap_export_extracted_stat.stat.exists and not
             sap_install_media_detect_skip_extraction_if_target_dir_exists)

# Reason for noqa: Difficult to determine the change status in the shell command sequence
- name: SAP Install Media Detect - SAP NetWeaver AS (ABAP) platform only EXPORT - Find self-extracting RAR EXE (parent RAR file) and extract SAP NetWeaver (ABAP) Installation Export files # noqa no-changed-when
  ansible.builtin.shell: set -o pipefail && if [ ! -z "$(file {{ item }} | grep 'RAR self-extracting archive')" ]; then eval "{{ sap_install_media_detect_rar_extract }}" "{{ item }}{{ sap_install_media_detect_rar_extract_argument }}" sapnwas_abap_export_extracted/ ; fi
  with_items:
    - "{{ detect_directory_files_nwas_abap_export.results | map(attribute='stdout') | select() }}"
  args:
    chdir: "{{ __sap_install_media_detect_software_main_directory }}"
  when: (not __sap_install_media_detect_sapnwas_abap_export_extracted_stat.stat.exists) or
        (    __sap_install_media_detect_sapnwas_abap_export_extracted_stat.stat.exists and not
             sap_install_media_detect_skip_extraction_if_target_dir_exists)

- name: SAP Install Media Detect - SAP NetWeaver AS (ABAP) platform only EXPORT - Identify EXPORT extracted
  ansible.builtin.find:
    paths: "{{ __sap_install_media_detect_software_main_directory }}/sapnwas_abap_export_extracted"
    recurse: true
    file_type: directory
    patterns: '.*DATA_UNITS.*'
    use_regex: true
  register: detect_directory_export_extracted

- name: SAP Install Media Detect - SAP NetWeaver AS (ABAP) platform only EXPORT - Local Directory source - re-list files in directory
  ansible.builtin.command: find . -maxdepth 1 -type f
  register: detect_directory_files
  args:
    chdir: "{{ __sap_install_media_detect_software_main_directory }}"
  changed_when: false
  when:
    - sap_install_media_detect_source == "local_dir"

- name: SAP Install Media Detect - SAP NetWeaver AS (ABAP) platform only EXPORT - Local Directory source - re-detect ZIP files (including no file extensions), ignore errors
  ansible.builtin.shell: set -o pipefail && if [ ! -z "$(file {{ item }} | grep 'Zip archive data')" ]; then echo {{ item }}; fi
  register: detect_directory_files_zip_repeated
#  changed_when: "item.stdout | length > 0"
  with_items:
    - "{{ detect_directory_files.stdout_lines }}"
  args:
    chdir: "{{ __sap_install_media_detect_software_main_directory }}"
  ignore_errors: true
  when:
    - sap_install_media_detect_source == "local_dir"

- name: SAP Install Media Detect - SAP NetWeaver AS (ABAP) platform only EXPORT - Local Directory source - re-detect RAR files (including no file extensions), ignore errors
  ansible.builtin.shell: set -o pipefail && if [ ! -z "$(file {{ item }} | grep 'RAR')" ]; then echo {{ item }}; fi
  register: detect_directory_files_rar_repeated
#  changed_when: "item.stdout | length > 0"
  with_items:
    - "{{ detect_directory_files.stdout_lines }}"
  args:
    chdir: "{{ __sap_install_media_detect_software_main_directory }}"
  ignore_errors: true
  when:
    - sap_install_media_detect_source == "local_dir"

# Reason for noqa: grep -q with pipefail shell option returns 141 instead of 0
- name: SAP Install Media Detect - SAP NetWeaver AS (ABAP) platform only EXPORT - Local Directory source - re-identify EXPORT files # noqa risky-shell-pipe
  ansible.builtin.shell: |
    if [ ! -z "$(file {{ item }} | grep 'Zip archive data')" ]; then
       if zipinfo -1 {{ item }} | grep -q 'DATA_UNITS/EXP'; then
          echo '{{ item }}'
       fi
    elif [ ! -z "$(file {{ item }} | grep 'RAR')" ]; then
       if eval "{{ sap_install_media_detect_rar_list }}" {{ item }} | grep -q 'DATA_UNITS/EXP'; then
          echo '{{ item }}'
       fi
    fi
  register: detect_directory_files_nwas_abap_export_repeated
  changed_when: "item | length > 0"
  with_items:
    - "{{ detect_directory_files_zip_repeated.results | map(attribute='stdout') | select() }}"
    - "{{ detect_directory_files_rar_repeated.results | map(attribute='stdout') | select() }}"
  args:
    chdir: "{{ __sap_install_media_detect_software_main_directory }}"
  when:
    - sap_install_media_detect_source == "local_dir"

- name: SAP Install Media Detect - SAP NetWeaver AS (ABAP) platform only EXPORT - Local Directory source - move EXPORT compressed archive files
  ansible.builtin.command: mv "{{ __sap_install_media_detect_software_main_directory }}/{{ item }}" "{{ __sap_install_media_detect_software_main_directory }}/sapnwas_abap_export/{{ item }}"
  with_items:
    - "{{ detect_directory_files_nwas_abap_export_repeated.results | map(attribute='stdout') | select() }}"
  when:
    - sap_install_media_detect_source == "local_dir"
