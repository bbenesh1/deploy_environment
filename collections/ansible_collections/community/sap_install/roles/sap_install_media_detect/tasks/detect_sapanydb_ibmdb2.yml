---

- name: SAP Install Media Detect - IBM Db2 - Get info of directory 'ibmdb2_extracted'
  ansible.builtin.stat:
    path: "{{ __sap_install_media_detect_software_main_directory }}/ibmdb2_extracted/"
  register: __sap_install_media_detect_ibmdb2_extracted_stat

- name: SAP Install Media Detect - IBM Db2 - Ensure directory 'ibmdb2_extracted' is absent
  ansible.builtin.file:
    path: "{{ __sap_install_media_detect_software_main_directory }}/ibmdb2_extracted/"
    state: absent
  when:
    - not sap_install_media_detect_skip_extraction_if_target_dir_exists

- name: SAP Install Media Detect - IBM Db2 - Get info of directory 'ibmdb2_client_extracted'
  ansible.builtin.stat:
    path: "{{ __sap_install_media_detect_software_main_directory }}/ibmdb2_client_extracted/"
  register: __sap_install_media_detect_ibmdb2_client_extracted_stat

- name: SAP Install Media Detect - IBM Db2 - Ensure directory 'ibmdb2_client_extracted' is absent
  ansible.builtin.file:
    path: "{{ __sap_install_media_detect_software_main_directory }}/ibmdb2_client_extracted/"
    state: absent
  when:
    - not sap_install_media_detect_skip_extraction_if_target_dir_exists

- name: SAP Install Media Detect - IBM Db2 - Get info of directory 'ibmdb2_license_extracted'
  ansible.builtin.stat:
    path: "{{ __sap_install_media_detect_software_main_directory }}/ibmdb2_license_extracted/"
  register: __sap_install_media_detect_ibmdb2_license_extracted_stat

- name: SAP Install Media Detect - IBM Db2 - Ensure directory 'ibmdb2_license_extracted' is absent
  ansible.builtin.file:
    path: "{{ __sap_install_media_detect_software_main_directory }}/ibmdb2_license_extracted/"
    state: absent
  when:
    - not sap_install_media_detect_skip_extraction_if_target_dir_exists

- name: SAP Install Media Detect - IBM Db2 - Create Directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
    owner: root
    group: root
  with_items:
    - "{{ __sap_install_media_detect_software_main_directory }}/ibmdb2/"
    - "{{ __sap_install_media_detect_software_main_directory }}/ibmdb2_extracted/"
    - "{{ __sap_install_media_detect_software_main_directory }}/ibmdb2_client_extracted/"
    - "{{ __sap_install_media_detect_software_main_directory }}/ibmdb2_license_extracted/"

- name: SAP Install Media Detect - IBM Db2 - List files in directory
  ansible.builtin.command: find . -maxdepth 1 -type f
  register: detect_directory_files
  args:
    chdir: "{{ __sap_install_media_detect_software_main_directory }}"
  changed_when: false

- name: SAP Install Media Detect - IBM Db2 - Detect ZIP files (including no file extensions), ignore errors
  ansible.builtin.shell: if [ ! -z "$(file {{ item }} | grep 'Zip archive data')" ]; then echo {{ item }}; fi
  register: detect_directory_files_zip
  with_items:
    - "{{ detect_directory_files.stdout_lines }}"
  args:
    chdir: "{{ __sap_install_media_detect_software_main_directory }}"
  ignore_errors: true
  changed_when: false

# Reason for noqa: grep -q with pipefail shell option returns 141 instead of 0
- name: SAP Install Media Detect - IBM Db2 - Identify IBM Db2 installation media # noqa risky-shell-pipe
  ansible.builtin.shell: |
    if [ ! -z "$(file {{ item }} | grep 'Zip archive data')" ]; then if zipinfo -1 {{ item }} | grep -q 'db2setup' ; then echo '{{ item }}' ; fi ; fi
  register: detect_directory_files_ibmdb2
  changed_when: "item | length > 0"
  with_items:
    - "{{ detect_directory_files_zip.results | map(attribute='stdout') | select() }}"
  args:
    chdir: "{{ __sap_install_media_detect_software_main_directory }}"

# Reason for noqa: grep -q with pipefail shell option returns 141 instead of 0
- name: SAP Install Media Detect - IBM Db2 - Identify IBM Db2 Client installation media # noqa risky-shell-pipe
  ansible.builtin.shell: |
    if [ ! -z "$(file {{ item }} | grep 'Zip archive data')" ]; then if zipinfo -1 {{ item }} | grep -q 'db6_update_client.sh' ; then echo '{{ item }}' ; fi ; fi
  register: detect_directory_files_ibmdb2_client
  changed_when: "item | length > 0"
  with_items:
    - "{{ detect_directory_files_zip.results | map(attribute='stdout') | select() }}"
  args:
    chdir: "{{ __sap_install_media_detect_software_main_directory }}"

# Reason for noqa: grep -q with pipefail shell option returns 141 instead of 0
- name: SAP Install Media Detect - IBM Db2 - Identify IBM Db2 OEM license file # noqa risky-shell-pipe
  ansible.builtin.shell: |
    if [ ! -z "$(file {{ item }} | grep 'Zip archive data')" ]; then if zipinfo -1 {{ item }} | grep -q 'db2aese_c.lic' ; then echo '{{ item }}' ; fi ; fi
  register: detect_directory_files_ibmdb2_license
  changed_when: "item | length > 0"
  with_items:
    - "{{ detect_directory_files_zip.results | map(attribute='stdout') | select() }}"
  args:
    chdir: "{{ __sap_install_media_detect_software_main_directory }}"

# Reason for noqa: Difficult to determine the change status in the shell command sequence
- name: SAP Install Media Detect - IBM Db2 - Extract ZIP files of IBM DB2 installation media # noqa no-changed-when
  ansible.builtin.shell: set -o pipefail && if [ ! -z "$(file {{ item }} | grep 'Zip archive data')" ]; then unzip {{ item }} -d {{ __sap_install_media_detect_software_main_directory }}/ibmdb2_extracted/{{ item }}_extracted; fi
  with_items:
    - "{{ detect_directory_files_ibmdb2.results | map(attribute='stdout') | select() }}"
  args:
    chdir: "{{ __sap_install_media_detect_software_main_directory }}"
  when: (not __sap_install_media_detect_ibmdb2_extracted_stat.stat.exists) or
        (    __sap_install_media_detect_ibmdb2_extracted_stat.stat.exists and not
             sap_install_media_detect_skip_extraction_if_target_dir_exists)

# Reason for noqa: Difficult to determine the change status in the shell command sequence
- name: SAP Install Media Detect - IBM Db2 - Extract ZIP files of IBM DB2 Client installation media # noqa no-changed-when
  ansible.builtin.shell: set -o pipefail && if [ ! -z "$(file {{ item }} | grep 'Zip archive data')" ]; then unzip {{ item }} -d {{ __sap_install_media_detect_software_main_directory }}/ibmdb2_client_extracted/{{ item }}_extracted; fi
  with_items:
    - "{{ detect_directory_files_ibmdb2_client.results | map(attribute='stdout') | select() }}"
  args:
    chdir: "{{ __sap_install_media_detect_software_main_directory }}"
  when: (not __sap_install_media_detect_ibmdb2_client_extracted_stat.stat.exists) or
        (    __sap_install_media_detect_ibmdb2_client_extracted_stat.stat.exists and not
             sap_install_media_detect_skip_extraction_if_target_dir_exists)

# Reason for noqa: Difficult to determine the change status in the shell command sequence
- name: SAP Install Media Detect - IBM Db2 - Extract ZIP files of IBM DB2 OEM license file # noqa no-changed-when
  ansible.builtin.shell: set -o pipefail && if [ ! -z "$(file {{ item }} | grep 'Zip archive data')" ]; then unzip {{ item }} -d {{ __sap_install_media_detect_software_main_directory }}/ibmdb2_license_extracted/{{ item }}_extracted; fi
  with_items:
    - "{{ detect_directory_files_ibmdb2_license.results | map(attribute='stdout') | select() }}"
  args:
    chdir: "{{ __sap_install_media_detect_software_main_directory }}"
  when: (not __sap_install_media_detect_ibmdb2_license_extracted_stat.stat.exists) or
        (    __sap_install_media_detect_ibmdb2_license_extracted_stat.stat.exists and not
             sap_install_media_detect_skip_extraction_if_target_dir_exists)

- name: SAP Install Media Detect - IBM Db2 - Identify IBM Db2 extracted
  ansible.builtin.find:
    paths: "{{ __sap_install_media_detect_software_main_directory }}/ibmdb2_extracted"
    recurse: true
    file_type: directory
    patterns: ".*LINUXX86_64.*"
    use_regex: true
  register: detect_directory_ibmdb2_extracted

- name: SAP Install Media Detect - IBM Db2 - Identify IBM Db2 Client extracted
  ansible.builtin.find:
    paths: "{{ __sap_install_media_detect_software_main_directory }}/ibmdb2_client_extracted"
    recurse: true
    file_type: directory
    patterns: ".*DATA_UNITS.*"
    use_regex: true
  register: detect_directory_ibmdb2_client_extracted

- name: SAP Install Media Detect - IBM Db2 - Local Directory source - move IBM Db2 compressed archive files
  ansible.builtin.command: mv "{{ __sap_install_media_detect_software_main_directory }}/{{ item }}" "{{ __sap_install_media_detect_software_main_directory }}/ibmdb2/{{ item }}"
  with_items:
    - "{{ detect_directory_files_ibmdb2.results | map(attribute='stdout') | select() }}"
    - "{{ detect_directory_files_ibmdb2_client.results | map(attribute='stdout') | select() }}"
    - "{{ detect_directory_files_ibmdb2_license.results | map(attribute='stdout') | select() }}"
  when:
    - sap_install_media_detect_source == "local_dir"
