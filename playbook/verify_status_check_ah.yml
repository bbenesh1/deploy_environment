---
- name: Check automation hub
  hosts: automationhub
  collections:
   - infra.ah_configuration
  tasks:

    - name: Check automation hub | Gather Facts about AH services
      ansible.builtin.service_facts:
      register: service_state_initial  
     
    - name: Check automation hub | Restart Pulp Core services 
      ansible.builtin.service:
        service: pulpcore
        state: restarted
      loop: 
       - pulpcore-content.service
       - pulpcore-api.service
      when: service_state_initial.ansible_facts.services[item].state != "running"
    
    - name: Check automation hub | Restart {{ item }} service
      vars: 
      ansible.builtin.service:
        service: "{{ item }}"
        state: restarted
      loop:
       - pulpcore-content.service
       - pulpcore-api.service
       - nginx.service       
      when: service_state_initial.ansible_facts.services[item].state != "running"

    - name: Check automation hub | Gather Facts about AH services again
      ansible.builtin.service_facts:
      register: service_state_current

    - name: Check automation hub | Verify the state of AH services
      ansible.builtin.fail:
        msg: " The {{ item }} is still not working please verify the issue by logging into Automation Hub terminal"
      loop:
        - nginx.service
        - pulpcore-content.service
        - pulpcore-api.service
      when: service_state_current.ansible_facts.services[item].state != "running"

    - name: Check automation hub | Confirm Web URL is functioning
      ansible.builtin.debug:
        var: "{{ lookup('infra.ah_configuration.ah_api', 'users', verify_ssl=false, return_all=true ) | map(attribute='username') | list  }}"  
      register: automation_hub_results

    - name: Check automation hub | Test network connection
      ansible.builtin.wait_for:
        host: "{{ ansible_hostname }}"
        port: 443
        state: started
        timeout: 5
      register: local_connections_for_ah
      ignore_errors: true
      when: automation_hub_results.failed != 'false'

    - name: Check automation hub | Confirm port connectivity
      ansible.builtin.fail:
        msg: "Local port connections on 443 cannot be established on Automation Hub please verify the issue by logging into Automation Hub terminal"
      when: local_connections_for_ah.failed == true
    
- name: Check automation hub continued
  hosts: automationcontroller
  collections:
   - infra.ah_configuration
  tasks:
        
    - name: Check automation hub continued | Test network connection
      ansible.builtin.wait_for:
        host: "{{ item }}"
        port: 443
        state: started
        timeout: 5
      register: controller_connections_for_ah
      ignore_errors: true
      loop: "{{ groups['automationhub'] }}"


    - name: Check automation hub continued | Confirm port connectivity
      ansible.builtin.fail:
        msg: "Ansible Controller port connections on 443 cannot be established to {{ item }} this is likely due to a Firewall, router or Switch issue"
      loop: "{{ groups['automationhub'] }}" 
      loop_control:
        index_var: my_idx
      when: controller_connections_for_ah.results[my_idx].failed == true
    
    - name: Check automation hub continued | Check lookup of AH database is successful
      ansible.builtin.debug:
        msg: "{{ lookup('infra.ah_configuration.ah_api', 'users', verify_ssl=false, return_all=true ) | map(attribute='username') | list  }}"  
      ignore_errors: true
      register: controller_lookup_result
         
    - name: Check automation hub continued | Confirm status of database lookup
      ansible.builtin.fail:
        msg: "Ansible Controller cannot lookup AH via this plugin, recommend checking web acces to Automation Hub"
      when: controller_lookup_result.failed != false